{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\huawei\\\\my-63050015\\\\src\\\\components\\\\Post.js\",\n  _s = $RefreshSig$();\nimport { Card, CardContent, Grid, IconButton } from \"@mui/material\";\nimport React from \"react\";\nimport { format } from \"date-fns\";\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Post = ({\n  post\n}) => {\n  _s();\n  //   const dateTime = new Date(post.dateTime);\n  //   const date = dateTime.getDate();\n  //   const month = dateTime.getMonth();\n  //   const year = dateTime.getFullYear();\n\n  //   const hour = dateTime.getHours();\n  //   const minute = dateTime.getMinutes();\n\n  const [posts, setPosts] = useState([{\n    id: 1,\n    text: \"post\"\n  }, {\n    id: 2,\n    text: \"key\"\n  }]);\n  const handleDelete = todoId => {\n    const updatedPosts = posts.filter(todo => todo.id !== todoId);\n    setPosts(updatedPosts);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: format(new Date(post.dateTime), \"HH:mm\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: format(new Date(post.dateTime), \"dd  MMMM  yyyy\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 1,\n          children: posts.map(todo => /*#__PURE__*/_jsxDEV(IconButton, {\n            onClick: () => handleDelete(todo.id),\n            children: /*#__PURE__*/_jsxDEV(DeleteOutlineIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Post, \"RMDnAlHdyzQgr2UrNEPVf7B+uFc=\");\n_c = Post;\nexport default Post;\nvar _c;\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"names":["Card","CardContent","Grid","IconButton","React","format","DeleteOutlineIcon","useState","jsxDEV","_jsxDEV","Post","post","_s","posts","setPosts","id","text","handleDelete","todoId","updatedPosts","filter","todo","children","container","spacing","item","xs","Date","dateTime","fileName","_jsxFileName","lineNumber","columnNumber","content","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/huawei/my-63050015/src/components/Post.js"],"sourcesContent":["import { Card, CardContent, Grid, IconButton } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport DeleteOutlineIcon from \"@mui/icons-material/DeleteOutline\";\r\nimport { useState } from \"react\";\r\n\r\nconst Post = ({ post }) => {\r\n  //   const dateTime = new Date(post.dateTime);\r\n  //   const date = dateTime.getDate();\r\n  //   const month = dateTime.getMonth();\r\n  //   const year = dateTime.getFullYear();\r\n\r\n  //   const hour = dateTime.getHours();\r\n  //   const minute = dateTime.getMinutes();\r\n\r\n  const [posts, setPosts] = useState([\r\n    { id: 1, text: \"post\" },\r\n    { id: 2, text: \"key\" },\r\n  ]);\r\n\r\n  const handleDelete = (todoId) => {\r\n    const updatedPosts = posts.filter((todo) => todo.id !== todoId);\r\n    setPosts(updatedPosts);\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardContent>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={1}>\r\n            {format(new Date(post.dateTime), \"HH:mm\")}\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            {format(new Date(post.dateTime), \"dd  MMMM  yyyy\")}\r\n          </Grid>\r\n          <Grid item xs={8}>\r\n            {post.content}\r\n          </Grid>\r\n          <Grid item xs={1}>\r\n            {posts.map((todo) => (\r\n              <IconButton onClick={() => handleDelete(todo.id)}>\r\n                <DeleteOutlineIcon />\r\n              </IconButton>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}